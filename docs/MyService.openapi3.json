{
  "openapi": "3.0.2",
  "info": {
    "title": "Use @title: '...' on your CDS service to provide a meaningful title.",
    "description": "Use @Core.LongDescription: '...' on your CDS service to provide a meaningful description.",
    "version": ""
  },
  "x-sap-api-type": "ODATAV4",
  "x-odata-version": "4.01",
  "x-sap-shortText": "Use @Core.Description: '...' on your CDS service to provide a meaningful short text.",
  "servers": [
    {
      "url": "/rest/my"
    }
  ],
  "tags": [
    {
      "name": "Comments"
    },
    {
      "name": "Files"
    },
    {
      "name": "LeaveRequest"
    }
  ],
  "paths": {
    "/$batch": {
      "post": {
        "summary": "Sends a group of requests",
        "description": "Group multiple requests into a single request payload, see [Batch Requests](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_BatchRequests).\n\n*Please note that \"Try it out\" is not supported for this request.*",
        "tags": [
          "Batch Requests"
        ],
        "requestBody": {
          "required": true,
          "description": "Batch request",
          "content": {
            "multipart/mixed;boundary=request-separator": {
              "schema": {
                "type": "string"
              },
              "example": "--request-separator\nContent-Type: application/http\nContent-Transfer-Encoding: binary\n\nGET Comments HTTP/1.1\nAccept: application/json\n\n\n--request-separator--"
            }
          }
        },
        "responses": {
          "200": {
            "description": "Batch response",
            "content": {
              "multipart/mixed": {
                "schema": {
                  "type": "string"
                },
                "example": "--response-separator\nContent-Type: application/http\n\nHTTP/1.1 200 OK\nContent-Type: application/json\n\n{...}\n--response-separator--"
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Comments": {
      "get": {
        "summary": "Retrieves a list of comments.",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "commentsText",
                  "commentsText desc",
                  "user",
                  "user desc",
                  "leaveRequest_ID",
                  "leaveRequest_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "commentsText",
                  "user",
                  "leaveRequest_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "leaveRequest"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Comments",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyService.Comments"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single comment.",
        "tags": [
          "Comments"
        ],
        "requestBody": {
          "description": "New comment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.Comments-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.Comments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Comments({ID})": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single comment.",
        "tags": [
          "Comments"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "commentsText",
                  "user",
                  "leaveRequest_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "leaveRequest"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.Comments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single comment.",
        "tags": [
          "Comments"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.Comments-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single comment.",
        "tags": [
          "Comments"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Comments({ID})/leaveRequest": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        }
      ],
      "get": {
        "summary": "Retrieves leave request of a comment.",
        "tags": [
          "Comments",
          "LeaveRequest"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ID",
                  "employeeName",
                  "leaveType",
                  "startDate",
                  "endDate",
                  "reason",
                  "status",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "files",
                  "comments",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved leave request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.LeaveRequest"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Files": {
      "get": {
        "summary": "Retrieves a list of files.",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "content",
                  "content desc",
                  "mediaType",
                  "mediaType desc",
                  "fileName",
                  "fileName desc",
                  "size",
                  "size desc",
                  "url",
                  "url desc",
                  "leaveRequestID",
                  "leaveRequestID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "content",
                  "mediaType",
                  "fileName",
                  "size",
                  "url",
                  "leaveRequestID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "fileToLeave",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Files",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyService.Files"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single file.",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "description": "New file",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.Files-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.Files"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Files(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single file.",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "content",
                  "mediaType",
                  "fileName",
                  "size",
                  "url",
                  "leaveRequestID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "fileToLeave",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.Files"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single file.",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.Files-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single file.",
        "tags": [
          "Files"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Files(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves draft administrative data of a file.",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes draft administrative data of a file.",
        "tags": [
          "Files"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes draft administrative data of a file.",
        "tags": [
          "Files"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Files(ID={ID},IsActiveEntity='{IsActiveEntity}')/MyService.draftPrepare": {
      "post": {
        "summary": "Invokes action draftPrepare",
        "tags": [
          "Files"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MyService.Files"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/Files(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves sibling entity of a file.",
        "tags": [
          "Files"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "content",
                  "mediaType",
                  "fileName",
                  "size",
                  "url",
                  "leaveRequestID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "fileToLeave",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.Files"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/Files(ID={ID},IsActiveEntity='{IsActiveEntity}')/fileToLeave": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves file to leave of a file.",
        "tags": [
          "Files",
          "LeaveRequest"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ID",
                  "employeeName",
                  "leaveType",
                  "startDate",
                  "endDate",
                  "reason",
                  "status",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "files",
                  "comments",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved file to leave",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.LeaveRequest"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LeaveRequest": {
      "get": {
        "summary": "Retrieves a list of leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "ID",
                  "ID desc",
                  "employeeName",
                  "employeeName desc",
                  "leaveType",
                  "leaveType desc",
                  "startDate",
                  "startDate desc",
                  "endDate",
                  "endDate desc",
                  "reason",
                  "reason desc",
                  "status",
                  "status desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ID",
                  "employeeName",
                  "leaveType",
                  "startDate",
                  "endDate",
                  "reason",
                  "status",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "files",
                  "comments",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved leave request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of LeaveRequest",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyService.LeaveRequest"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "requestBody": {
          "description": "New leave request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.LeaveRequest-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created leave request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.LeaveRequest"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves a single leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ID",
                  "employeeName",
                  "leaveType",
                  "startDate",
                  "endDate",
                  "reason",
                  "status",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "files",
                  "comments",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved leave request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.LeaveRequest"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes a single leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.LeaveRequest-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes a single leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')/DraftAdministrativeData": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves draft administrative data of a leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "DraftUUID",
                  "CreationDateTime",
                  "CreatedByUser",
                  "DraftIsCreatedByMe",
                  "LastChangeDateTime",
                  "LastChangedByUser",
                  "InProcessByUser",
                  "DraftIsProcessedByMe"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved draft administrative data",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.DraftAdministrativeData"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "patch": {
        "summary": "Changes draft administrative data of a leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "requestBody": {
          "description": "New property values",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData-update"
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "delete": {
        "summary": "Deletes draft administrative data of a leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "responses": {
          "204": {
            "description": "Success"
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')/MyService.draftActivate": {
      "post": {
        "summary": "Invokes action draftActivate",
        "tags": [
          "LeaveRequest"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MyService.LeaveRequest"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ]
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')/MyService.draftEdit": {
      "post": {
        "summary": "Invokes action draftEdit",
        "tags": [
          "LeaveRequest"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MyService.LeaveRequest"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "PreserveChanges": {
                    "type": "boolean",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')/MyService.draftPrepare": {
      "post": {
        "summary": "Invokes action draftPrepare",
        "tags": [
          "LeaveRequest"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MyService.LeaveRequest"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        },
        "parameters": [
          {
            "description": "key: ID",
            "in": "path",
            "name": "ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef"
            }
          },
          {
            "description": "key: IsActiveEntity",
            "in": "path",
            "name": "IsActiveEntity",
            "required": true,
            "schema": {
              "type": "boolean",
              "default": true
            }
          }
        ],
        "requestBody": {
          "description": "Action parameters",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "SideEffectsQualifier": {
                    "type": "string",
                    "nullable": true
                  }
                }
              }
            }
          }
        }
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')/SiblingEntity": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves sibling entity of a leave request.",
        "tags": [
          "LeaveRequest"
        ],
        "parameters": [
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "ID",
                  "employeeName",
                  "leaveType",
                  "startDate",
                  "endDate",
                  "reason",
                  "status",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "files",
                  "comments",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved sibling entity",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.LeaveRequest"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')/comments": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of comments of a leave request.",
        "tags": [
          "LeaveRequest",
          "Comments"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "commentsText",
                  "commentsText desc",
                  "user",
                  "user desc",
                  "leaveRequest_ID",
                  "leaveRequest_ID desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "commentsText",
                  "user",
                  "leaveRequest_ID"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "leaveRequest"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved comments",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Comments",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyService.Comments"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single comment of a leave request.",
        "tags": [
          "LeaveRequest",
          "Comments"
        ],
        "requestBody": {
          "description": "New comment",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.Comments-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created comment",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.Comments"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/LeaveRequest(ID={ID},IsActiveEntity='{IsActiveEntity}')/files": {
      "parameters": [
        {
          "description": "key: ID",
          "in": "path",
          "name": "ID",
          "required": true,
          "schema": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          }
        },
        {
          "description": "key: IsActiveEntity",
          "in": "path",
          "name": "IsActiveEntity",
          "required": true,
          "schema": {
            "type": "boolean",
            "default": true
          }
        }
      ],
      "get": {
        "summary": "Retrieves a list of files of a leave request.",
        "tags": [
          "LeaveRequest",
          "Files"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/top"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "$ref": "#/components/parameters/search"
          },
          {
            "name": "$filter",
            "description": "Filter items by property values, see [Filtering](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionfilter)",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/count"
          },
          {
            "name": "$orderby",
            "description": "Order items by property values, see [Sorting](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionorderby)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "ID desc",
                  "createdAt",
                  "createdAt desc",
                  "createdBy",
                  "createdBy desc",
                  "modifiedAt",
                  "modifiedAt desc",
                  "modifiedBy",
                  "modifiedBy desc",
                  "content",
                  "content desc",
                  "mediaType",
                  "mediaType desc",
                  "fileName",
                  "fileName desc",
                  "size",
                  "size desc",
                  "url",
                  "url desc",
                  "leaveRequestID",
                  "leaveRequestID desc",
                  "IsActiveEntity",
                  "IsActiveEntity desc",
                  "HasActiveEntity",
                  "HasActiveEntity desc",
                  "HasDraftEntity",
                  "HasDraftEntity desc"
                ]
              }
            }
          },
          {
            "name": "$select",
            "description": "Select properties to be returned, see [Select](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionselect)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "ID",
                  "createdAt",
                  "createdBy",
                  "modifiedAt",
                  "modifiedBy",
                  "content",
                  "mediaType",
                  "fileName",
                  "size",
                  "url",
                  "leaveRequestID",
                  "IsActiveEntity",
                  "HasActiveEntity",
                  "HasDraftEntity"
                ]
              }
            }
          },
          {
            "name": "$expand",
            "description": "The value of $expand query option is a comma-separated list of navigation property names, stream property names, or $value indicating the stream content of a media-entity. The corresponding related entities and stream values will be represented inline, see [Expand](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionexpand)",
            "in": "query",
            "explode": false,
            "schema": {
              "type": "array",
              "uniqueItems": true,
              "items": {
                "type": "string",
                "enum": [
                  "*",
                  "fileToLeave",
                  "DraftAdministrativeData",
                  "SiblingEntity"
                ]
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Retrieved files",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "title": "Collection of Files",
                  "properties": {
                    "@count": {
                      "$ref": "#/components/schemas/count"
                    },
                    "value": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MyService.Files"
                      }
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      },
      "post": {
        "summary": "Creates a single file of a leave request.",
        "tags": [
          "LeaveRequest",
          "Files"
        ],
        "requestBody": {
          "description": "New file",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MyService.Files-create"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created file",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MyService.Files"
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addCommentToLeave": {
      "get": {
        "summary": "Invokes function addCommentToLeave",
        "tags": [
          "Service Operations"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "leaveRequestID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef ",
              "nullable": true,
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "commentsText",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "maxLength": 1000,
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "user",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "maxLength": 20,
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "format": "uuid",
                      "example": "01234567-89ab-cdef-0123-456789abcdef",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addFileToLeave": {
      "get": {
        "summary": "Invokes function addFileToLeave",
        "tags": [
          "Service Operations"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "leaveID",
            "schema": {
              "type": "string",
              "format": "uuid",
              "example": "01234567-89ab-cdef-0123-456789abcdef ",
              "nullable": true,
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "fileName",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "mediaType",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "size",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true,
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "content",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "value": {
                      "type": "string",
                      "format": "uuid",
                      "example": "01234567-89ab-cdef-0123-456789abcdef",
                      "nullable": true
                    }
                  }
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    },
    "/addLeaveRequest": {
      "get": {
        "summary": "Invokes function addLeaveRequest",
        "tags": [
          "LeaveRequest"
        ],
        "parameters": [
          {
            "required": false,
            "in": "query",
            "name": "employeeName",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "maxLength": 100,
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "leaveType",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "maxLength": 50,
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "startDate",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2017-04-13 ",
              "nullable": true,
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "endDate",
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2017-04-13 ",
              "nullable": true,
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "reason",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "maxLength": 250,
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          },
          {
            "required": false,
            "in": "query",
            "name": "status",
            "description": "String value needs to be enclosed in single quotes",
            "schema": {
              "type": "string",
              "maxLength": 20,
              "nullable": true,
              "pattern": "^(null|'([^']|'')*')$",
              "default": "null"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "allOf": [
                    {
                      "$ref": "#/components/schemas/MyService.LeaveRequest"
                    }
                  ],
                  "nullable": true
                }
              }
            }
          },
          "4XX": {
            "$ref": "#/components/responses/error"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "MyService.Comments": {
        "title": "Comments",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "commentsText": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "user": {
            "type": "string",
            "maxLength": 20,
            "nullable": true
          },
          "leaveRequest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.LeaveRequest"
              }
            ],
            "nullable": true
          },
          "leaveRequest_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        }
      },
      "MyService.Comments-create": {
        "title": "Comments (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "commentsText": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "user": {
            "type": "string",
            "maxLength": 20,
            "nullable": true
          },
          "leaveRequest_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        }
      },
      "MyService.Comments-update": {
        "title": "Comments (for update)",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "commentsText": {
            "type": "string",
            "maxLength": 1000,
            "nullable": true
          },
          "user": {
            "type": "string",
            "maxLength": 20,
            "nullable": true
          },
          "leaveRequest_ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          }
        }
      },
      "MyService.DraftAdministrativeData": {
        "title": "DraftAdministrativeData",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "MyService.DraftAdministrativeData-create": {
        "title": "DraftAdministrativeData (for create)",
        "type": "object",
        "properties": {
          "DraftUUID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "MyService.DraftAdministrativeData-update": {
        "title": "DraftAdministrativeData (for update)",
        "type": "object",
        "properties": {
          "CreationDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "CreatedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsCreatedByMe": {
            "type": "boolean",
            "nullable": true
          },
          "LastChangeDateTime": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "LastChangedByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "InProcessByUser": {
            "type": "string",
            "maxLength": 256,
            "nullable": true
          },
          "DraftIsProcessedByMe": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "MyService.Files": {
        "title": "Files",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "content": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "leaveRequestID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "fileToLeave": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.LeaveRequest"
              }
            ],
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.Files"
              }
            ],
            "nullable": true
          }
        }
      },
      "MyService.Files-create": {
        "title": "Files (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "content": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "leaveRequestID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity"
        ]
      },
      "MyService.Files-update": {
        "title": "Files (for update)",
        "type": "object",
        "properties": {
          "content": {
            "type": "string",
            "format": "base64url",
            "nullable": true
          },
          "mediaType": {
            "type": "string",
            "nullable": true
          },
          "fileName": {
            "type": "string",
            "nullable": true
          },
          "size": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          },
          "leaveRequestID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef",
            "nullable": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "MyService.LeaveRequest": {
        "title": "LeaveRequest",
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "createdBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2017-04-13T15:51:04.0000000Z",
            "nullable": true
          },
          "modifiedBy": {
            "type": "string",
            "maxLength": 255,
            "nullable": true
          },
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "employeeName": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "leaveType": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "maxLength": 250,
            "nullable": true
          },
          "status": {
            "type": "string",
            "maxLength": 20,
            "nullable": true,
            "default": "Pending"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyService.Files"
            }
          },
          "files@count": {
            "$ref": "#/components/schemas/count"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyService.Comments"
            }
          },
          "comments@count": {
            "$ref": "#/components/schemas/count"
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData"
              }
            ],
            "nullable": true
          },
          "SiblingEntity": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.LeaveRequest"
              }
            ],
            "nullable": true
          }
        }
      },
      "MyService.LeaveRequest-create": {
        "title": "LeaveRequest (for create)",
        "type": "object",
        "properties": {
          "ID": {
            "type": "string",
            "format": "uuid",
            "example": "01234567-89ab-cdef-0123-456789abcdef"
          },
          "employeeName": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "leaveType": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "maxLength": 250,
            "nullable": true
          },
          "status": {
            "type": "string",
            "maxLength": 20,
            "nullable": true,
            "default": "Pending"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyService.Files-create"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyService.Comments-create"
            }
          },
          "IsActiveEntity": {
            "type": "boolean",
            "default": true
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        },
        "required": [
          "IsActiveEntity"
        ]
      },
      "MyService.LeaveRequest-update": {
        "title": "LeaveRequest (for update)",
        "type": "object",
        "properties": {
          "employeeName": {
            "type": "string",
            "maxLength": 100,
            "nullable": true
          },
          "leaveType": {
            "type": "string",
            "maxLength": 50,
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date",
            "example": "2017-04-13",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "maxLength": 250,
            "nullable": true
          },
          "status": {
            "type": "string",
            "maxLength": 20,
            "nullable": true,
            "default": "Pending"
          },
          "files": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyService.Files-create"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MyService.Comments-create"
            }
          },
          "HasActiveEntity": {
            "type": "boolean",
            "default": false
          },
          "HasDraftEntity": {
            "type": "boolean",
            "default": false
          },
          "DraftAdministrativeData": {
            "allOf": [
              {
                "$ref": "#/components/schemas/MyService.DraftAdministrativeData-create"
              }
            ],
            "nullable": true
          }
        }
      },
      "count": {
        "anyOf": [
          {
            "type": "number"
          },
          {
            "type": "string"
          }
        ],
        "description": "The number of entities in the collection. Available when using the [$count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount) query option."
      },
      "error": {
        "type": "object",
        "required": [
          "error"
        ],
        "properties": {
          "error": {
            "type": "object",
            "required": [
              "code",
              "message"
            ],
            "properties": {
              "code": {
                "type": "string"
              },
              "message": {
                "type": "string"
              },
              "target": {
                "type": "string"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "required": [
                    "code",
                    "message"
                  ],
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "target": {
                      "type": "string"
                    }
                  }
                }
              },
              "innererror": {
                "type": "object",
                "description": "The structure of this object is service-specific"
              }
            }
          }
        }
      }
    },
    "parameters": {
      "top": {
        "name": "$top",
        "in": "query",
        "description": "Show only the first n items, see [Paging - Top](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptiontop)",
        "schema": {
          "type": "integer",
          "minimum": 0
        },
        "example": 50
      },
      "skip": {
        "name": "$skip",
        "in": "query",
        "description": "Skip the first n items, see [Paging - Skip](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionskip)",
        "schema": {
          "type": "integer",
          "minimum": 0
        }
      },
      "count": {
        "name": "$count",
        "in": "query",
        "description": "Include count of items, see [Count](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptioncount)",
        "schema": {
          "type": "boolean"
        }
      },
      "search": {
        "name": "$search",
        "in": "query",
        "description": "Search items by search phrases, see [Searching](http://docs.oasis-open.org/odata/odata/v4.01/odata-v4.01-part1-protocol.html#sec_SystemQueryOptionsearch)",
        "schema": {
          "type": "string"
        }
      }
    },
    "responses": {
      "error": {
        "description": "Error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/error"
            }
          }
        }
      }
    }
  }
}