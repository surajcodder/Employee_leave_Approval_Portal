sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageToast","sap/ui/model/json/JSONModel"],function(e,t,n){"use strict";async function o(e,t){for(const n of t){if(n.fileName===e&&n.fileObject){return await n.fileObject.arrayBuffer()}}return null}return e.extend("project1.controller.LeaveReqObject",{onInit:function(){const e=new n({items:[]});this.getView().setModel(e,"documents");const t=new sap.ui.model.json.JSONModel({comment:""});this.getView().setModel(t,"commentModel");const o=this.getOwnerComponent().getRouter();o.getRoute("LeaveReqObject").attachPatternMatched(this._onRouteMatched,this)},_onRouteMatched:function(){const e=this.byId("inputStartDate");const t=this.byId("inputEndDate");const n=new Date;n.setHours(0,0,0,0);e.setMinDate(n);e.setValue("");t.setValue("");t.setMinDate(null)},onStartDateChange:function(e){const t=e.getSource().getDateValue();if(!t)return;const n=new Date(t);n.setDate(n.getDate()+1);const o=this.byId("inputEndDate");o.setMinDate(n);const s=o.getDateValue();if(s&&s<n){o.setDateValue(null)}},onBeforeUploadStarts:async function(e){const n=e.getParameter("item");const o=await(n.getFileObject?.());if(!o){t.show("No file selected.");return}const s=await this.fileToBase64(o);const a=this.getView().getModel("documents");const i=a.getProperty("/items")||[];i.push({fileName:o.name,mediaType:o.type,fileSize:o.size,fileObject:o,content:s,ID:null});a.setProperty("/items",i);e.preventDefault();t.show("File stored locally.")},fileToBase64(e){return new Promise((t,n)=>{const o=new FileReader;o.onload=()=>{const e=o.result.split(",")[1];t(e)};o.onerror=n;o.readAsDataURL(e)})},onCreate:async function(){debugger;const e=this.getView();const n=this.getOwnerComponent().getModel();const o=n.getServiceUrl();const s=e.byId("inputEmployeeName").getValue();const a=e.byId("inputLeaveType").getSelectedItem()?.getText();const i=e.byId("inputStartDate").getValue();const r=e.byId("inputEndDate").getValue();const c=e.byId("inputReason").getValue();const l=e.byId("inputStatus").getValue()||"Pending";if(!s||!a||!i||!r){t.show("Please fill in all required fields.");return}const u=e.getModel("documents");const d=u.getProperty("/items")||[];const m=d[0];if(!m||!m.fileObject){t.show("File content missing. Please upload again.");return}try{const e=n.bindContext("/addLeaveRequest(...)");e.setParameter("employeeName",s).setParameter("leaveType",a).setParameter("startDate",i).setParameter("endDate",r).setParameter("reason",c).setParameter("status",l);await e.execute();const o=await e.getBoundContext().requestObject();const u=o.ID;const m=d[0];const g=await this.fileToBase64(m.fileObject);const f=n.bindContext("/addFileToLeave(...)");f.setParameter("leaveID",u);f.setParameter("fileName",m.fileName);f.setParameter("mediaType",m.mediaType);f.setParameter("size",m.fileSize);f.setParameter("content",g);await this.postComment(u);await f.execute();debugger;t.show("Leave request submitted with file and comment.");this.onCancel();t.show("Leave request submitted with file.");debugger;debugger;this.onCancel()}catch(e){console.error("Upload failed:",e);t.show("Leave request failed.")}},onCancel:function(){this.getOwnerComponent().getRouter().navTo("View1")},openPreview:async function(e){debugger;const n=e.getSource().getBindingContext("documents");const o=n.getObject();const s=o.content;const a=o.fileName;const i=o.mediaType||"application/octet-stream";if(s){const e=atob(s);const t=new Array(e.length);for(let n=0;n<e.length;n++){t[n]=e.charCodeAt(n)}const n=new Uint8Array(t);const o=new Blob([n],{type:i});const a=URL.createObjectURL(o);window.open(a,"_blank");return}const r=o.ID;if(!r){t.show("File not yet saved. Please submit first.");return}try{const e=this.getView().getModel();const n=e.getServiceUrl();const o=await fetch(`${n}Files(ID=${r},IsActiveEntity=true)`);const s=await o.json();if(!s.content){t.show("No content found in database.");return}const a=s.content;const i=s.mediaType||"application/octet-stream";const c=atob(a);const l=new Array(c.length);for(let e=0;e<c.length;e++){l[e]=c.charCodeAt(e)}const u=new Uint8Array(l);const d=new Blob([u],{type:i});const m=URL.createObjectURL(d);window.open(m,"_blank")}catch(e){console.error("Preview failed:",e);t.show("Failed to load preview.")}},postComment:async function(e){debugger;const n=this.getView().getModel("commentModel");const o=n.getProperty("/comment");if(!o){return}try{const s=this.getView().getModel();const a=s.getServiceUrl();const i={commentsText:o,user:"admin",leaveRequest_ID:e};debugger;const r=await fetch(`${a}Comments`,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i)});debugger;if(!r.ok){throw new Error("Failed to post comment")}t.show("Comment saved.");n.setProperty("/comment","")}catch(e){console.error("Comment creation failed:",e);t.show("Failed to save comment.")}}})});
//# sourceMappingURL=LeaveReqObject.controller.js.map